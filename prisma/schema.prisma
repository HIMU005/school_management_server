// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
  GUARDIAN
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String   @unique
  age       Int?
  photoURL  String
  password  String?
  phone     String?
  sex       String?
  role      Role     @default(STUDENT)
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  lastLogIn DateTime @default(now())

  Teacher Teacher?

  Student Student?

  Guardian Guardian?
}

model Teacher {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user_id     Int      @unique
  position    String?
  passedFrom  String?
  joiningDate DateTime @default(now())
}

model Student {
  id       Int       @id @default(autoincrement())
  user     User      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user_id  Int       @unique
  class    String?
  session  String?
  Guardian Guardian?
}

model Guardian {
  id         Int     @id @default(autoincrement())
  user       User    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user_id    Int     @unique
  student    Student @relation(fields: [student_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  student_id Int     @unique
}
